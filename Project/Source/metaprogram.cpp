
#include "base.cpp"

static const char* const paths[] =
{
    "asset_system.h",
    "asset_system.cpp",
    "base.h",
    "base.cpp",
    "core.h",
    "core.cpp",
    "editor.h",
    "editor.cpp",
    "input.h",
    "input.cpp",
    "main.cpp",
    "parser.h",
    "parser.cpp",
    "unity_build.cpp"
};

enum TokenKind
{
    Tok_Ident,
    Tok_OpenParen,
    Tok_Colon,
    Tok_String,
    Tok_CloseParen,
    Tok_Semicolon,
    Tok_Asterisk,
    Tok_OpenBracket,
    Tok_CloseBracket,
    Tok_OpenBraces,
    Tok_CloseBraces,
    
    Tok_EndOfStream
};

struct Token
{
    TokenKind kind;
    String text;
};

Slice<Token> LexFile(char* file, Arena* arena);

int main()
{
    Arena permArena = ArenaVirtualMemInit(GB(2), MB(2));
    
    printf("\n");
    printf("/* This file was generated by 'metaprogram.cpp'. It contains information about\n");
    printf(" * various datastructures to be able to use introspection\n");
    printf("*/\n");
    
    for(int i = 0; i < ArrayCount(paths); ++i)
    {
        char* file = LoadEntireFileAndNullTerminate(paths[i]);
        LexFile(file, &permArena);
    }
}

Slice<Token> LexFile(char* file, Arena* arena)
{
    Slice<Token> res = {0};
    return res;
}