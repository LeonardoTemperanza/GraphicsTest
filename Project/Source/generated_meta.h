
#pragma once

/*
 * This file was generated by 'metaprogram.cpp'. It contains information about
 * various datastructures to be able to use introspection
*/

#include "base.h"

enum MetaType
{
    Meta_Unknown = 0,
    Meta_Int,
    Meta_Bool,
    Meta_Float,
    Meta_Vec3,
    Meta_Quat,
};

struct MetaTypeInfo
{
    MetaType metaType;
    int numPointers;
    bool isSlice;
    bool isString;
};

struct MemberDefinition
{
    MetaTypeInfo typeInfo;
    int offset;
    String name;
    const char* cName;
    String niceName;
    const char* cNiceName;
    bool showEditor;
};

struct MetaStruct
{
    Slice<MemberDefinition> members;
    String name;
    const char* cName;
};

MemberDefinition _membersOfEntity[] =
{
{ { Meta_Vec3, 0, false, false }, offsetof(Entity, pos), StrLit("pos"), "pos", StrLit("Position"), "Position", true },
{ { Meta_Quat, 0, false, false }, offsetof(Entity, rot), StrLit("rot"), "rot", StrLit("Rotation"), "Rotation", true },
{ { Meta_Vec3, 0, false, false }, offsetof(Entity, scale), StrLit("scale"), "scale", StrLit("Scale"), "Scale", true },
{ { Meta_Unknown, 0, false, false }, offsetof(Entity, flags), StrLit("flags"), "flags", StrLit("Flags"), "Flags", true },
{ { Meta_Unknown, 0, false, false }, offsetof(Entity, gen), StrLit("gen"), "gen", StrLit("Gen"), "Gen", true },
{ { Meta_Unknown, 0, false, false }, offsetof(Entity, derivedKind), StrLit("derivedKind"), "derivedKind", StrLit("Derived Kind"), "Derived Kind", true },
{ { Meta_Unknown, 0, false, false }, offsetof(Entity, derivedId), StrLit("derivedId"), "derivedId", StrLit("Derived Id"), "Derived Id", true },
{ { Meta_Unknown, 1, false, false }, offsetof(Entity, model), StrLit("model"), "model", StrLit("Model"), "Model", true },
{ { Meta_Unknown, 0, false, false }, offsetof(Entity, mount), StrLit("mount"), "mount", StrLit("Mount"), "Mount", true },
{ { Meta_Unknown, 0, false, false }, offsetof(Entity, mountBone), StrLit("mountBone"), "mountBone", StrLit("Mount Bone"), "Mount Bone", true },
};

MetaStruct metaEntity =
{ {.ptr=_membersOfEntity, .len=ArrayCount(_membersOfEntity)}, StrLit("Entity"), "Entity" };

MemberDefinition _membersOfCamera[] =
{
{ { Meta_Unknown, 1, false, false }, offsetof(Camera, base), StrLit("base"), "base", StrLit("Base"), "Base", true },
{ { Meta_Unknown, 0, false, false }, offsetof(Camera, params), StrLit("params"), "params", StrLit("Params"), "Params", true },
};

MetaStruct metaCamera =
{ {.ptr=_membersOfCamera, .len=ArrayCount(_membersOfCamera)}, StrLit("Camera"), "Camera" };

MemberDefinition _membersOfPlayer[] =
{
{ { Meta_Unknown, 1, false, false }, offsetof(Player, base), StrLit("base"), "base", StrLit("Base"), "Base", true },
{ { Meta_Vec3, 0, false, false }, offsetof(Player, speed), StrLit("speed"), "speed", StrLit("Speed"), "Speed", false },
{ { Meta_Bool, 0, false, false }, offsetof(Player, grounded), StrLit("grounded"), "grounded", StrLit("Grounded"), "Grounded", false },
{ { Meta_Float, 0, false, false }, offsetof(Player, gravity), StrLit("gravity"), "gravity", StrLit("Gravity"), "Gravity", true },
{ { Meta_Float, 0, false, false }, offsetof(Player, jumpVel), StrLit("jumpVel"), "jumpVel", StrLit("Jump Vel"), "Jump Vel", true },
{ { Meta_Float, 0, false, false }, offsetof(Player, moveSpeed), StrLit("moveSpeed"), "moveSpeed", StrLit("Move Speed"), "Move Speed", true },
{ { Meta_Float, 0, false, false }, offsetof(Player, groundAccel), StrLit("groundAccel"), "groundAccel", StrLit("Ground Accel"), "Ground Accel", true },
};

MetaStruct metaPlayer =
{ {.ptr=_membersOfPlayer, .len=ArrayCount(_membersOfPlayer)}, StrLit("Player"), "Player" };

MemberDefinition _membersOfPointLight[] =
{
{ { Meta_Unknown, 1, false, false }, offsetof(PointLight, base), StrLit("base"), "base", StrLit("Base"), "Base", true },
{ { Meta_Float, 0, false, false }, offsetof(PointLight, intensity), StrLit("intensity"), "intensity", StrLit("Intensity"), "Intensity", true },
{ { Meta_Vec3, 0, false, false }, offsetof(PointLight, offset), StrLit("offset"), "offset", StrLit("Offset"), "Offset", true },
};

MetaStruct metaPointLight =
{ {.ptr=_membersOfPointLight, .len=ArrayCount(_membersOfPointLight)}, StrLit("PointLight"), "PointLight" };

